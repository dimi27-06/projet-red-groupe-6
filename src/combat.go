package main

import (
	"fmt"
	"math/rand"
	"time"
)

func (player *Character) choisirAttaque() {

	player.TakePotM()
	player.TakePotS()
	var enemyHp int
	player.TakePotP(&enemyHp)
	var choix int

	fmt.Println(Cyan + "\n=== Choisissez une attaque ===" + Reset)
	fmt.Println("1 - Attaque de base")
	fmt.Println("2 - Attaque sp√©ciale (100 mana)")
	fmt.Println("3 - Potion de vie")
	fmt.Println("4 - Potion de poison")
	fmt.Println("5 - Potion de mana")
	fmt.Print("Votre choix : ")
	fmt.Scan(&choix)

	switch choix {
	case 1:
		for _, skill := range player.Skills {
			if !skill.Special {
				player.AttackSkill(skill.Nom)
				return
			}
		}
	case 2:
		for _, skill := range player.Skills {
			if skill.Special {
				player.AttackSkill(skill.Nom)
				return
			}
		}
	default:
		fmt.Println(Red + "‚ùå Choix invalide" + Reset)
	}
}

func (player *Character) AttackSkill(skillName string) {
	for _, skill := range player.Skills {
		if skill.Nom == skillName {
			if skill.Special && player.Mana < skill.CoutMana {
				fmt.Println(Red+"‚ùå Pas assez de mana pour lancer"+Reset, skill.Nom)
				return
			}
			if skill.Special {
				player.Mana -= skill.CoutMana
				fmt.Printf("üî• %s utilise %s et inflige %d d√©g√¢ts ! (Mana restant : %d/%d)\n",
					player.Nom, skill.Nom, skill.Degats, player.Mana, player.ManaMax)
			} else {
				fmt.Printf("\n‚öîÔ∏è %s utilise %s et inflige %d d√©g√¢ts !\n",
					player.Nom, skill.Nom, skill.Degats)
			}
			return
		}
	}
	fmt.Println(Red+"‚ùå Comp√©tence introuvable :"+Reset, skillName)
}

func combatOrcs(player *Character) {
	stopSound()
	playSoundAsyncCombat()
	fmt.Println(Bold, Yellow+"\n D√©but de l‚Äôhistoire "+Reset)

	histoire := `Aragorn, Gimli et Legolas, apr√®s avoir parcouru les collines d‚ÄôEmyn Muil, 
arrivent en lisi√®re de la For√™t de Fangorn. 
Ils savent que deux Hobbits de la Communaut√© ‚Äì Merry et Pippin ‚Äì y ont √©t√© captur√©s par des Orques d‚ÄôIsengard. 
Leur mission : les retrouver avant que le mal√©fique Saroumane ou d‚Äôautres cr√©atures ne mettent la main sur eux.`
	typeWriter(histoire, 7*time.Millisecond)

	orcPv := 90
	orcDegats := 8

	for {
		if orcPv <= 0 {
			fmt.Println(Green + "üéâ Victoire ! Vous avez √©limin√© le groupe d'orcs et sauv√© les hobbits !" + Reset)
			player.ShopUnlocked = true
			return
		}

		if player.Pv <= 0 {
			player.IsDead()
			if player.Pv <= 0 {
				fmt.Println(Red + "‚ò†Ô∏è La Communaut√© a √©chou√©..." + Reset)
				return
			}
		}
		fmt.Println(Cyan + "\n=== Tour du joueur ===" + Reset)
		fmt.Printf("1 - %s (d√©g√¢ts : %d)\n", player.BaseAttackName, player.BaseAttackDmg)
		fmt.Printf("2 - %s (d√©g√¢ts : %d, co√ªt : %d mana)\n", player.SkillName, player.SkillDmg, player.SkillManaCost)
		fmt.Printf("3 - Potion de vie (vie r√©g√©n√©r√©e : 20, -1 potion de vie)\n")
		fmt.Printf("4 - Potion de poison (inflige : 10 d√©g√¢ts, -1 potion de poison)\n")
		fmt.Printf("5 - Potion de mana (mana r√©g√©n√©r√© : 30, -1 potion de mana)\n")
		fmt.Print("Votre choix : ")
		var choix int
		fmt.Scan(&choix)

		switch choix {
		case 1:
			// attaque de baseeeeee
		case 2:
			// attaque sp√©cialeeeee
		case 3:
			player.TakePotS()
		case 4:
			player.TakePotP(&orcPv)
		case 5:
			player.TakePotM()
		default:
			fmt.Println(Red + "‚ùå Choix invalide !" + Reset)
		}

		var degats int
		switch choix {
		case 1:
			degats = player.BaseAttackDmg
			fmt.Printf("\nüí• Vous utilisez %s et infligez %d d√©g√¢ts !\n", player.BaseAttackName, degats)
		case 2:
			if player.Mana >= player.SkillManaCost {
				degats = player.SkillDmg
				player.Mana -= player.SkillManaCost
				fmt.Printf("üî• Vous utilisez %s et infligez %d d√©g√¢ts !\n", player.SkillName, degats)
			} else {
				fmt.Println(Red + "‚ö†Ô∏è Pas assez de mana ! Vous attaquez normalement." + Reset)
				degats = player.BaseAttackDmg
			}
		default:
			fmt.Println(Red + "‚ùå Mauvais choix, attaque de base par d√©faut." + Reset)
			degats = player.BaseAttackDmg
		}

		orcPv -= degats
		if orcPv < 0 {
			orcPv = 0
		}
		fmt.Printf("üëπ PV des orcs restants : %d\n", orcPv)

		if orcPv <= 0 {
			stopSound()
			fmt.Println(Green + "üéâ Vous avez vaincu les orcs, bien jou√© ! Le shop Maison de Sylvebarbe est maintenant disponible. " + Reset)
			player.ShopUnlocked = true
			player.Gold += 100
			fmt.Println(Yellow + "Vous avez gagn√© 100 pi√®ces d‚Äôor !" + Reset)
			player.TrollUnlocked = true
			playSoundAsyncDebut()
			return

		}

		fmt.Println(Cyan + "\n=== Tour des orcs ===" + Reset)
		player.Pv -= orcDegats
		if player.Pv < 0 {
			player.Pv = 0
		}
		fmt.Printf("üëπ Les orcs frappent %s pour %d d√©g√¢ts ! (PV : %d/%d)\n",
			player.Nom, orcDegats, player.Pv, player.PvMax)

		if player.Pv <= 0 {
			player.IsDead()
			if player.Pv <= 0 {
				stopSound()
				fmt.Println(Red + "‚ò†Ô∏è Vous √™tes tomb√© d√©finitivement... Les hobbits sont perdus." + Reset)

				gameOver()

				return
			}
		}
	}
}

func combatTrollEtOrcs(player *Character) {
	stopSound()
	playSoundAsyncCombat()
	histoire2 := Yellow + "\n apres avoir vaincu les orcs notre trio continue leurs route mais La for√™t devient plus sombre. Apr√®s une courte accalmie, deux Orques, accompagn√©s d‚Äôun Troll, attaquent. " + Reset
	typeWriter(histoire2, 7*time.Millisecond)

	ennemiPv := 200
	ennemiDegats := 25

	for {
		if ennemiPv <= 0 {
			fmt.Println(Green + "üéâ Victoire ! Vous avez vaincu le Troll et ses orcs !" + Reset)
			player.Gold += 200
			fmt.Println(Yellow + "üí∞ Vous gagnez 200 pi√®ces d‚Äôor !" + Reset)
			return
		}

		if player.Pv <= 0 {
			player.IsDead()
			if player.Pv <= 0 {
				fmt.Println(Red + "‚ò†Ô∏è Le Troll et ses orcs vous ont √©cras√©... C‚Äôest la fin." + Reset)
				gameOver()
				return
			}
		}

		fmt.Println(Cyan + "\n=== Tour du joueur ===" + Reset)
		fmt.Printf("1 - %s (d√©g√¢ts : %d)\n", player.BaseAttackName, player.BaseAttackDmg)
		fmt.Printf("2 - %s (d√©g√¢ts : %d, co√ªt : %d mana)\n", player.SkillName, player.SkillDmg, player.SkillManaCost)
		fmt.Printf("3 - Potion de vie (vie r√©g√©n√©r√©e : 20, -1 potion de vie)\n")
		fmt.Printf("4 - Potion de poison (inflige : 10 d√©g√¢ts, -1 potion de poison)\n")
		fmt.Printf("5 - Potion de mana (mana r√©g√©n√©r√© : 30, -1 potion de mana)\n")
		fmt.Print("Votre choix : ")
		var choix int
		fmt.Scan(&choix)

		switch choix {
		case 1:
			// attaque de baseeeeee
		case 2:
			// attaque sp√©cialeeeee
		case 3:
			player.TakePotS()
		case 4:
			player.TakePotP(&ennemiPv)
		case 5:
			player.TakePotM()
		default:
			fmt.Println(Red + "‚ùå Choix invalide !" + Reset)
		}
		var degats int
		switch choix {
		case 1:
			degats = player.BaseAttackDmg
			fmt.Printf("\nüí• Vous utilisez %s et infligez %d d√©g√¢ts !\n", player.BaseAttackName, degats)
		case 2:
			if player.Mana >= player.SkillManaCost {
				degats = player.SkillDmg
				player.Mana -= player.SkillManaCost
				fmt.Printf("\nüî• Vous utilisez %s et infligez %d d√©g√¢ts !\n", player.SkillName, degats)
			} else {
				fmt.Println(Red + "‚ö†Ô∏è Pas assez de mana ! Attaque normale." + Reset)
				degats = player.BaseAttackDmg
			}
		}

		ennemiPv -= degats
		if ennemiPv < 0 {
			ennemiPv = 0
		}
		fmt.Printf("üëπ PV du Troll + Orcs : %d\n", ennemiPv)

		if ennemiPv <= 0 {
			fmt.Println(Green + "üéâ Victoire ! Vous avez vaincu le Troll et ses orcs !" + Reset)
			player.Gold += 200
			fmt.Println(Yellow + "üí∞ Vous gagnez 200 pi√®ces d‚Äôor !" + Reset)
			player.SauronUnlocked = true
			fmt.Println(Cyan + "\nüîî Le combat final contre SAURON est d√©sormais disponible dans le menu principal !" + Reset)
			stopSound()
			playSoundAsyncDebut()

			return
		}

		fmt.Println(Cyan + "\n=== Tour des ennemis ===" + Reset)
		player.Pv -= ennemiDegats
		if player.Pv < 0 {
			player.Pv = 0
		}
		fmt.Printf("üëπ Le Troll et les orcs frappent %s pour %d d√©g√¢ts ! (PV : %d/%d)\n",
			player.Nom, ennemiDegats, player.Pv, player.PvMax)

		if player.Pv <= 0 {
			player.IsDead()
			if player.Pv <= 0 {
				fmt.Println(Red + "‚ò†Ô∏è Vous √™tes tomb√© face au Troll et ses orcs..." + Reset)
				gameOver()
				playSoundAsyncCombat()
				playSoundAsyncDebut()
				return
			}
		}
	}
}

func combatSauron(player *Character) {
	stopSound()
	playSoundAsyncSauron()
	histoire3 := Red + Bold + "\n‚öîÔ∏è Apr√®s avoir vaincu le Troll et ses orcs, nos h√©ros marchent vers le Mordor.\nDans les flammes de la montagne du Destin, Sauron surgit avec sa masse gigantesque... Le combat final commence !" + Reset
	typeWriter(histoire3, 7*time.Millisecond)
	sauronPv := 400

	rnd := rand.New(rand.NewSource(time.Now().UnixNano()))

	for {
		if sauronPv <= 0 {
			stopSound()
			fmt.Println(Green + Bold + "üéâ Victoire ultime ! Vous avez terrass√© Sauron et sauv√© la Terre du Milieu et les hobbits!" + Reset)
			player.Gold += 500
			fmt.Println(Yellow + "üí∞ R√©compense : 500 pi√®ces d‚Äôor !" + Reset)
			player.SauronUnlocked = true
			playSoundAsyncDebut()
			return
		}

		if player.Pv <= 0 {
			player.IsDead()
			if player.Pv <= 0 {
				stopSound()
				fmt.Println(Red + Bold + "‚ò†Ô∏è Sauron vous a an√©anti... les hobbits sont perdu." + Reset)
				gameOver()
				return
			}
		}

		fmt.Println(Cyan + "\n=== Tour du joueur ===" + Reset)
		fmt.Printf("1 - %s (d√©g√¢ts : %d)\n", player.BaseAttackName, player.BaseAttackDmg)
		fmt.Printf("2 - %s (d√©g√¢ts : %d, co√ªt : %d mana)\n", player.SkillName, player.SkillDmg, player.SkillManaCost)
		fmt.Printf("3 - Potion de vie (vie r√©g√©n√©r√©e : 20, -1 potion de vie)\n")
		fmt.Printf("4 - Potion de poison (inflige : 10 d√©g√¢ts, -1 potion de poison)\n")
		fmt.Printf("5 - Potion de mana (mana r√©g√©n√©r√© : 30, -1 potion de mana)\n")
		fmt.Print("Votre choix : ")

		var choix int
		fmt.Scan(&choix)

		switch choix {
		case 1:
			degats := player.BaseAttackDmg
			sauronPv -= degats
			fmt.Printf("\n‚öîÔ∏è Vous utilisez %s et infligez %d d√©g√¢ts √† Sauron !\n", player.BaseAttackName, degats)
		case 2:
			if player.Mana >= player.SkillManaCost {
				degats := player.SkillDmg
				player.Mana -= player.SkillManaCost
				sauronPv -= degats
				fmt.Printf("\nüî• Vous utilisez %s et infligez %d d√©g√¢ts √† Sauron ! (Mana : %d/%d)\n", player.SkillName, degats, player.Mana, player.ManaMax)
			} else {
				fmt.Println(Red + "‚ö†Ô∏è Pas assez de mana ! Vous attaquez normalement." + Reset)
				degats := player.BaseAttackDmg
				sauronPv -= degats
				fmt.Printf("\n‚öîÔ∏è Attaque de base : %d d√©g√¢ts √† Sauron.\n", degats)
			}
		case 3:
			player.TakePotS()
		case 4:
			player.TakePotP(&sauronPv)
		case 5:
			player.TakePotM()
		default:
			fmt.Println(Red + "‚ùå Choix invalide, attaque de base par d√©faut !" + Reset)
			degats := player.BaseAttackDmg
			sauronPv -= degats
			fmt.Printf("\n‚öîÔ∏è Attaque de base : %d d√©g√¢ts √† Sauron.\n", degats)
		}

		if sauronPv < 0 {
			sauronPv = 0
		}
		fmt.Printf("üëπ PV restants de Sauron : %d\n", sauronPv)

		if sauronPv <= 0 {
			stopSound()
			fmt.Println(Green + Bold + "üéâ Vous avez terrass√© Sauron ! La lumi√®re triomphe des t√©n√®bres !" + Reset)
			return
		}

		fmt.Println(Red + "\n=== Tour de Sauron ===" + Reset)

		attaque := rnd.Intn(3)
		switch attaque {
		case 0:
			degats := 40
			player.Pv -= degats
			fmt.Printf(Red+Bold+"üíÄ Sauron frappe avec sa masse et inflige %d d√©g√¢ts ! (PV : %d/%d)\n"+Reset,
				degats, player.Pv, player.PvMax)
		case 1:
			degats := 60
			player.Pv -= degats
			fmt.Printf(Red+Bold+"üí• Sauron utilise une FRAPPE √âCRASANTE et inflige %d d√©g√¢ts d√©vastateurs ! (PV : %d/%d)\n"+Reset,
				degats, player.Pv, player.PvMax)
		case 2:
			degats := 50
			player.Pv -= degats
			player.Mana -= 20
			if player.Mana < 0 {
				player.Mana = 0
			}
			fmt.Printf(Red+Bold+"üî• Sauron invoque les FLAMMES DU MORDOR et inflige %d d√©g√¢ts ! Vous perdez aussi 20 mana ! (PV : %d/%d | Mana : %d/%d)\n"+Reset,
				degats, player.Pv, player.PvMax, player.Mana, player.ManaMax)
		}

		if player.Pv < 0 {
			player.Pv = 0
		}

		if sauronPv <= 0 {
			stopSound()
			fmt.Println(Green + Bold + "üéâ Vous avez terrass√© Sauron ! La lumi√®re triomphe des t√©n√®bres !" + Reset)
			time.Sleep(2 * time.Second)
		}

	}

}

func combatNazguls(player *Character) {
	stopSound()
	playSoundAsyncNazgul()
	histoire := Red + Bold + "\nüíÄ Niveau Bonus ! Les 9 Nazg√ªls apparaissent pour venger Sauron ! Pr√©parez-vous √† un combat √©pique..." + Reset
	typeWriter(histoire, 7*time.Millisecond)

	nazgulsPv := 500
	nazgulsDegats := 35

	rnd := rand.New(rand.NewSource(time.Now().UnixNano()))

	for {
		if nazgulsPv <= 0 {
			fmt.Println(Green + Bold + "üéâ Victoire ultime ! Vous avez terrass√© les 9 Nazg√ªls !" + Reset)
			player.Gold += 1000
			fmt.Println(Yellow + "üí∞ R√©compense : 1000 pi√®ces d‚Äôor !" + Reset)
			stopSound()
			playSoundAsyncDebut()
			return
		}

		if player.Pv <= 0 {
			player.IsDead()
			if player.Pv <= 0 {
				stopSound()
				fmt.Println(Red + Bold + "‚ò†Ô∏è Les Nazg√ªls vous ont an√©anti... les hobbits sont perdus pour de bon." + Reset)
				gameOver()
				return
			}
		}

		fmt.Println(Cyan + "\n=== Tour du joueur ===" + Reset)
		fmt.Printf("1 - %s (d√©g√¢ts : %d)\n", player.BaseAttackName, player.BaseAttackDmg)
		fmt.Printf("2 - %s (d√©g√¢ts : %d, co√ªt : %d mana)\n", player.SkillName, player.SkillDmg, player.SkillManaCost)
		fmt.Printf("3 - Potion de vie (vie r√©g√©n√©r√©e : 20, -1 potion de vie)\n")
		fmt.Printf("4 - Potion de poison (inflige : 10 d√©g√¢ts, -1 potion de poison)\n")
		fmt.Printf("5 - Potion de mana (mana r√©g√©n√©r√© : 30, -1 potion de mana)\n")
		fmt.Print("Votre choix : ")

		var choix int
		fmt.Scan(&choix)

		var degats int
		switch choix {
		case 1:
			degats = player.BaseAttackDmg
			nazgulsPv -= degats
			fmt.Printf("\n‚öîÔ∏è Vous utilisez %s et infligez %d d√©g√¢ts aux Nazg√ªls !\n", player.BaseAttackName, degats)
		case 2:
			if player.Mana >= player.SkillManaCost {
				degats = player.SkillDmg
				player.Mana -= player.SkillManaCost
				nazgulsPv -= degats
				fmt.Printf("\nüî• Vous utilisez %s et infligez %d d√©g√¢ts aux Nazg√ªls ! (Mana : %d/%d)\n", player.SkillName, degats, player.Mana, player.ManaMax)
			} else {
				fmt.Println(Red + "‚ö†Ô∏è Pas assez de mana ! Attaque normale." + Reset)
				degats = player.BaseAttackDmg
				nazgulsPv -= degats
				fmt.Printf("\n‚öîÔ∏è Attaque de base : %d d√©g√¢ts aux Nazg√ªls.\n", degats)
			}
		case 3:
			player.TakePotS()
		case 4:
			player.TakePotP(&nazgulsPv)
		case 5:
			player.TakePotM()
		default:
			fmt.Println(Red + "‚ùå Choix invalide, attaque de base par d√©faut !" + Reset)
			degats = player.BaseAttackDmg
			nazgulsPv -= degats
			fmt.Printf("\n‚öîÔ∏è Attaque de base : %d d√©g√¢ts aux Nazg√ªls.\n", degats)
		}

		if nazgulsPv < 0 {
			nazgulsPv = 0
		}
		fmt.Printf("üëπ PV restants des Nazg√ªls : %d\n", nazgulsPv)

		fmt.Println(Red + "\n=== Tour des Nazg√ªls ===" + Reset)
		nazgulsAttack := rnd.Intn(3)
		var nazgulsDmg int
		switch nazgulsAttack {
		case 0:
			nazgulsDmg = nazgulsDegats
			player.Pv -= nazgulsDmg
			fmt.Printf(Red+Bold+"üíÄ Les Nazg√ªls frappent %s pour %d d√©g√¢ts ! (PV : %d/%d)\n"+Reset,
				player.Nom, nazgulsDmg, player.Pv, player.PvMax)
		case 1:
			nazgulsDmg = nazgulsDegats + 20
			player.Pv -= nazgulsDmg
			fmt.Printf(Red+Bold+"üí• Les Nazg√ªls utilisent une attaque sombre et infligent %d d√©g√¢ts ! (PV : %d/%d)\n"+Reset,
				nazgulsDmg, player.Pv, player.PvMax)
		case 2:
			nazgulsDmg = nazgulsDegats + 10
			player.Pv -= nazgulsDmg
			player.Mana -= 15
			if player.Mana < 0 {
				player.Mana = 0
			}
			fmt.Printf(Red+Bold+"üî• Les Nazg√ªls invoquent l‚Äôombre du Mordor et infligent %d d√©g√¢ts ! Mana perdue : 15 (PV : %d/%d | Mana : %d/%d)\n"+Reset,
				nazgulsDmg, player.Pv, player.PvMax, player.Mana, player.ManaMax)
		}

		if player.Pv < 0 {
			player.Pv = 0
		}
	}
}
